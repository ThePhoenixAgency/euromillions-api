name: Pull request
on:
  pull_request:
    paths-ignore:
      - 'docs/**'

jobs:
  linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: docker://github/super-linter:slim-v4
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON: true
          VALIDATE_DOCKERFILE: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_MARKDOWN: true
          VALIDATE_TERRAFORM_TFLINT: true
          VALIDATE_TERRAFORM_TERRASCAN: true
          MARKDOWN_CONFIG_FILE: .markdownlint.yaml
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraform:
    needs: [linter]
    name: Terraform
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: configs/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ~1.0

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init -backend-config="conn_str=${{ secrets.PG_BACKEND_DB_URL }}"

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Staging Plan
        run: terraform plan -no-color
        continue-on-error: true
        env:
          TF_WORKSPACE: staging
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_heroku_email: ${{ secrets.HEROKU_EMAIL }}
          TF_VAR_heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          TF_VAR_flask_env: development

      - name: Terraform Prod Plan
        run: terraform plan -no-color
        continue-on-error: true
        env:
          TF_WORKSPACE: prod
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_heroku_email: ${{ secrets.HEROKU_EMAIL }}
          TF_VAR_heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          TF_VAR_flask_env: production
