name: Release
on:
  release:
    types: [published]

jobs:
  terraform:
    name: Execute Terraform
    runs-on: ubuntu-latest
    environment: prod-terraform

    defaults:
      run:
        working-directory: configs/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ~1.0

      - name: Get tf backend configs
        id: configs
        run: echo "::set-output name=pg_db_url::$(heroku config:get DATABASE_URL -a weneedthepoh-tf-state-backend web)"
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Terraform Init
        run: terraform init -backend-config="conn_str=${{ steps.configs.outputs.pg_db_url }}"

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        env:
          TF_WORKSPACE: prod
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_heroku_email: ${{ secrets.HEROKU_EMAIL }}
          TF_VAR_heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          TF_VAR_flask_env: production

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Login to Heroku Container registry
        run: heroku container:login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      - name: Build and push
        run: heroku container:push -a prod-euromillions-api web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

  deploy:
    needs: [build, terraform]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Deploy API
        run: heroku container:release -a prod-euromillions-api web
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
